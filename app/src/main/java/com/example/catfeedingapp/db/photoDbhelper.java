package com.example.catfeedingapp.db;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;
import android.database.sqlite.SQLiteStatement;
import android.provider.ContactsContract;

import androidx.annotation.Nullable;

import com.example.catfeedingapp.photomodel.photo;

public class photoDbhelper extends SQLiteOpenHelper {
    private static final String TEXT = " TEXT";
    private static final String INTEGER = " INTEGER";
    private static final String COMMA_SEPERATOR = ",";
    private static final String DATABASE_NAME = "photoAlbum.db";
    private static final int DATABASE_VERSION = 1;



    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {

    }
    // This method creates a table in SqLite with the table name 'memories'
    // The memories table has 3 columns to store the an autogenerated Primary key (Unique identifier)
    // and to store the image title and the string format of the image itself
    private static final String CreateEntries = "CREATE TABLE " + photoFormat.photoEntry.TABLE_NAME +
            "(" + photoFormat.photoEntry._ID + INTEGER + " PRIMARY KEY" + COMMA_SEPERATOR +
            photoFormat.photoEntry.COLUMN_TITLE + TEXT + COMMA_SEPERATOR +
            photoFormat.photoEntry.COLUMN_IMAGE + TEXT + ")";

    public photoDbhelper (Context context) {         //Constructor
        super(context, DATABASE_NAME, null, DATABASE_VERSION);

    }

    @Override
    public void onCreate(SQLiteDatabase db) {   // This method creates the table defined in the CreateEntries method
        db.execSQL(CreateEntries);
    }

    public Cursor readAllMemories() {            // Queries the database and returns it's data in a Cursor
        SQLiteDatabase db = getReadableDatabase();

        return db.query(
                photoFormat.photoEntry.TABLE_NAME,
                null,
                null,
                null,
                null,
                null,
                null
        );


        }

    public boolean addMemory(photo photo) {
        SQLiteDatabase db = getWritableDatabase(); //Open the database that will be used for writing

        ContentValues values = new ContentValues();
        //stores the photo title and the string format of the actual photo in the ContentValues values along with
        //it's corresponding Column names
        values.put(photoFormat.photoEntry.COLUMN_TITLE, photo.getTitle());
        values.put(photoFormat.photoEntry.COLUMN_IMAGE, photo.getImageAsString());
         // inserts the values of the ContentValues 'values' into the SQLiteDatabase in the table 'memories'
        return db.insert(photoFormat.photoEntry.TABLE_NAME, null, values) != -1;

    }

    public Cursor getData (String sql) {
        SQLiteDatabase db = getReadableDatabase();
        return db.rawQuery(sql, null);  // Raw queries the database and returns a Cursor over the data set
    }
    // Deletes the data from the database where the ID in the database matches the ID passed as a parameter to this method
    //
    public void deleteData(long _id){
        SQLiteDatabase database  = getWritableDatabase();
        String sql = "DELETE FROM memories WHERE _id = ?";
        SQLiteStatement statement = database.compileStatement(sql); // returns the pre complied sql statement above
        statement.clearBindings();
        statement.bindLong(1, _id); // "?" in sql statement is filled with the _id parameter

        statement.execute(); // statement is executed and record with the passed ID is deleted
        database.close();
    }




}
